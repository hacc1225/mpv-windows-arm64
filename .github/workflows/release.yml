name: Build for Windows ARM64

on:
  push:

jobs:
  build-windows-arm64:
    name: Build
    runs-on: ubuntu-latest
    env:
      mpv_version: "0.37.0"
      llvm_path: "${{ github.workspace }}/llvm-mingw"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install build-essential cmake ninja-build pkg-config p7zip nasm python3-pip autoconf-archive patch
          sudo python3 -m pip install meson cython
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20231128/llvm-mingw-20231128-ucrt-ubuntu-20.04-x86_64.tar.xz
          tar -xf llvm-mingw-*.tar.xz
          rm llvm-mingw-*.tar.xz
          mv llvm-mingw-* llvm-mingw

      - name: Setup a new (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                  # action you need, `v11` in this case to stay up
                                  # to date with fixes on the v11 branch
        with:
          vcpkgGitCommitId: '6f29f12e82a8293156836ad81cc9bf5af41fe836'
          
      - name: Install libraries from vcpkg
        run: |
          PATH=$PATH:${{ env.llvm_path }}/bin
          cd ${{ env.RUNVCPKG_VCPKG_ROOT }}
          patch -p1 < ${{ github.workspace }}/patches/0001-support-openssl-arm64-mingw-static-release.patch
          patch -p1 < ${{ github.workspace }}/patches/0002-support-ffmpeg-arm64-mingw.patch
          patch -p1 < ${{ github.workspace }}/patches/0004-build-ffmpeg-with-d3d11va-and-dxva2.patch
          # tell vcpkg to only build Release variants of the dependencies
          mkdir triplets_overlay
          cp triplets/community/arm64-mingw-static.cmake triplets_overlay/arm64-mingw-static-release.cmake
          echo "set(VCPKG_BUILD_TYPE release)" >> triplets_overlay/arm64-mingw-static-release.cmake
          # clear buildtrees after each package installation to reduce disk space requirements
          packages="ffmpeg[ass,fdk-aac,freetype,fribidi,iconv,mp3lame,openssl,x264,zlib,xml2,opengl,lzma,bzip2,dav1d,fontconfig,openjpeg] xxhash lcms mujs libjpeg-turbo libarchive jack2 vulkan-loader rubberband uchardet openal-soft libdvdcss libdvdread libdvdnav"
          ./vcpkg upgrade \
            --overlay-triplets=triplets_overlay \
            --no-dry-run
          ./vcpkg install \
            --overlay-triplets=triplets_overlay \
            --clean-after-build \
            --triplet=arm64-mingw-static-release \
            --host-triplet=x64-linux-release \
            --allow-unsupported \
            mp3lame
          ./vcpkg install \
            --overlay-triplets=triplets_overlay \
            --clean-after-build \
            --triplet=arm64-mingw-static-release \
            --host-triplet=x64-linux-release \
            --allow-unsupported \
            $packages

      - name: Build mpv
        run: |
          chmod 755 ./build-cross.sh
          export vcpkg_dir="${{ env.RUNVCPKG_VCPKG_ROOT }}"
          ./build-cross.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mpv_${{ env.mpv_version }}_arm64
          path: mpv_*.7z

      - name: Batch release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: mpv_*.7z